<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	    xmlns:d="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:sys="clr-namespace:System"
        xmlns:emc07="clr-namespace:EMC07">


		<Viewbox x:Key="EmcPlcOk" Margin="2">
			<Canvas Width="490.054" Height="490.054">
				<Canvas.RenderTransform>
					<TranslateTransform X="0" Y="0"/>
				</Canvas.RenderTransform>
				<Canvas.Resources/>
				<Canvas>
					<Canvas>
						<Path Fill="#FFFFFF">
							<Path.Data>
								<PathGeometry Figures="M469.577 101.961h-393.6l74.9-65.8c8.3-8.3 9.4-20.9 2.1-29.2c-7.3-8.3-20.8-9.4-29.1-2.1l-116.5 102.4    c-8.7 8.7-9.2 22 0 31.3l116.5 103.3c12.3 10.2 25 3.1 29.1-1c7.3-8.3 6.2-21.9-2.1-29.2l-77.3-67.8h394.9    c11.3 0 21.5-9.4 21.5-20.9C490.077 111.361 480.877 101.961 469.577 101.961z"/>
							</Path.Data>
						</Path>
						<Path Fill="#FFFFFF">
							<Path.Data>
								<PathGeometry Figures="M481.777 350.361l-116.5-103.3c-8.3-7.3-21.8-6.3-29.1 2.1c-7.3 8.3-6.2 21.9 2.1 29.2l76.1 66.8h-394    c-11.2 0-20.3 9.4-20.3 20.9s9.1 20.9 20.3 20.9h393.9l-76.1 66.8c-8.3 8.3-9.4 20.9-2.1 29.2c11.9 12.6 25 5.2 29.1 2.1    l116.5-103.3C491.677 371.761 491.577 360.261 481.777 350.361z"/>
							</Path.Data>
						</Path>
					</Canvas>
				</Canvas>
				<Canvas.LayoutTransform>
					<RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
				</Canvas.LayoutTransform>
			</Canvas>
		</Viewbox>

		<Viewbox x:Key="EmcPlcEr" Margin="2">
			<Canvas Width="357" Height="357">
				<Canvas.RenderTransform>
					<TranslateTransform X="0" Y="0"/>
				</Canvas.RenderTransform>
				<Canvas.Resources/>
				<Polygon Fill="#FF0000" Points="357,35.7 321.3,0 178.5,142.8 35.7,0 0,35.7 142.8,178.5 0,321.3 35.7,357 178.5,214.2 321.3,357 357,321.3 214.2,178.5" />
			</Canvas>
		</Viewbox>

		<Style x:Key="ShapeOkColor" TargetType="Shape">
			<Setter Property="Fill" Value="{DynamicResource EmcNormalValueColor}"/>
		</Style>

		<Style x:Key="ShapeErrorColor" TargetType="Shape">
			<Setter Property="Fill" Value="{DynamicResource EmcColorBorder}"/>
		</Style>


		<!--Bottom Button with CheckBox style -->
		<!--Для установки свойства IsChecked нужно биндиться к булевому свойству State в DataContext-->
		<Style x:Key="EmcButtonCheckBox" TargetType="CheckBox">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="CheckBox">
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Grid>
									<Border HorizontalAlignment="Center"
										VerticalAlignment="Center"
										BorderThickness="2.5"
										CornerRadius="2"
										BorderBrush="{TemplateBinding Foreground}">
										<StackPanel>
											<Path
											Visibility="Collapsed"
											x:Name="CheckMark_True"
											Margin="5"
											Width="20"
											Height="20"
											SnapsToDevicePixels="False"
											Stroke="{TemplateBinding Foreground}"
											StrokeThickness="1">
												<Path.Data>
													<PathGeometry>
														<PathFigure StartPoint="0,10">
															<LineSegment Point="10,20"/>
															<LineSegment Point="20,0"/>
														</PathFigure>
													</PathGeometry>
												</Path.Data>
											</Path>

											<Path
											x:Name="CheckMark_Null"
											Margin="5"
											Width="20"
											Height="20"
											SnapsToDevicePixels="False"
											Stroke="{TemplateBinding Foreground}"
											StrokeThickness="1"
											Fill="{TemplateBinding Foreground}">
												<Path.Data>
													<PathGeometry>
														<PathFigure StartPoint="0,0" IsClosed="True" IsFilled="True">
															<LineSegment Point="0,20"/>
															<LineSegment Point="20,20"/>
															<LineSegment Point="20,0"/>
														</PathFigure>
													</PathGeometry>
												</Path.Data>
											</Path>
										</StackPanel>
									</Border>
								</Grid>
							</BulletDecorator.Bullet>
							<ContentPresenter
									VerticalAlignment="Center"
									HorizontalAlignment="Center"
									RecognizesAccessKey="True">
							</ContentPresenter>
						</BulletDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="False">
								<Setter TargetName="CheckMark_True" Property="Visibility" Value="Hidden"/>
								<Setter TargetName="CheckMark_Null" Property="Visibility" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="CheckMark_True" Property="Visibility" Value="Visible"/>
								<Setter TargetName="CheckMark_Null" Property="Visibility" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="{x:Null}">
								<Setter TargetName="CheckMark_True" Property="Visibility" Value="Collapsed"/>
								<Setter TargetName="CheckMark_Null" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<Style x:Key="EmcNavigateMenuDummy" TargetType="Border">
			<Setter Property="Background" Value="{DynamicResource EmcButtonMenuBackground}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource EmcColorBorder}"/>
			<Setter Property="BorderThickness" Value="0,1,0,0"/>
		</Style>

		<Style x:Key="EmcShowInfo" TargetType="TextBox">
			<Setter Property="FontFamily" Value="Courier New"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
			<Setter Property="AcceptsReturn" Value="True"/>
			<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="Foreground" Value="{DynamicResource EmcTextForeground}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="IsReadOnly" Value="True"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>


		<Style x:Key="EmcDefaultTabControl" TargetType="TabControl">
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="0"/>
		</Style>


		<Style x:Key="EmcDefaultTabItem" TargetType="TabItem">
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>


		<Style x:Key="EmcTabControl" TargetType="TabControl">
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="BorderThickness" Value="0,0,0,0"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="0"/>
		</Style>

		<Style x:Key="EmcTabControlNoBdr" TargetType="TabControl">
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="BorderThickness" Value="0,0,0,0"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="0"/>
		</Style>

		<Style x:Key="EmcTabControlWithName" TargetType="TabControl">
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid KeyboardNavigation.TabNavigation="Local">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<Grid Grid.Row="0" Panel.ZIndex="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<TabPanel Grid.Column="0" Margin="2,2,2,0" IsItemsHost="true" />

								<DockPanel Grid.Column="1" LastChildFill="True">
									<TextBlock Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Text="{Binding NameTabControl, FallbackValue=*Название*}" Foreground="{DynamicResource EmcToolbarForeground}" FontSize="{DynamicResource EmcFontSizeLarge}"/>
								</DockPanel>

							</Grid>

							<Border Grid.Row="1" x:Name="Border"  BorderThickness="0,1,0,0" BorderBrush="{DynamicResource EmcColorBorder}"
										KeyboardNavigation.TabNavigation="Local"
										KeyboardNavigation.DirectionalNavigation="Contained"
										KeyboardNavigation.TabIndex="2">
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="EmcTabItem" TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="TabItemTemplateBorder">
							<Border x:Name="TextBorder" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource EmcColorBorder}" Height="{DynamicResource EmcTabItemHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
								<TextBlock x:Name="TabItemTextBlock" FontWeight="DemiBold" VerticalAlignment="Center" FontSize="16" Padding="0,3,0,3" >
									<ContentPresenter x:Name="TabItemTemplateContent" VerticalAlignment="Center" ContentSource="Header" Margin="10,0,10,0"/>
								</TextBlock>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcSelectedColor}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcTabItemForeground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="EmcTabItem2" TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="TabItemTemplateBorder">
							<Border x:Name="TextBorder" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource EmcColorBorder}" Height="{DynamicResource EmcTabItemHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
								<TextBlock x:Name="TabItemTextBlock" FontWeight="DemiBold" VerticalAlignment="Center" FontSize="16" Padding="0,3,0,3" Width="120" TextAlignment="Center">
									<ContentPresenter x:Name="TabItemTemplateContent" VerticalAlignment="Center" ContentSource="Header"  />
								</TextBlock>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcSelectedColor}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcTabItemForeground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="EmcTabItem3" TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="TabItemTemplateBorder">
							<Border x:Name="TextBorder" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource EmcColorBorder}" Height="{DynamicResource EmcTabItemHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
								<TextBlock x:Name="TabItemTextBlock" FontWeight="DemiBold" Foreground="{DynamicResource EmcTextForeground}" VerticalAlignment="Center" FontSize="16" Padding="0,0,0,0" Width="120" TextAlignment="Center">
									<ContentPresenter x:Name="TabItemTemplateContent" VerticalAlignment="Center" ContentSource="Header"  />
								</TextBlock>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="TextBorder" Property="Background" Value="{DynamicResource EmcSelectedColor}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="TextBorder" Property="Background" Value="{DynamicResource EmcUnselectedColor}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль TabItem с темно-синим цветом и бордером слева (L)-->
		<Style x:Key="EmcTabItem#3L" TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="TabItemTemplateBorder">
							<Border x:Name="TextBorder" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource EmcColorBorder}" Height="{DynamicResource EmcTabItemHeightMid}" VerticalAlignment="Center" HorizontalAlignment="Center">
								<TextBlock x:Name="TabItemTextBlock" FontWeight="DemiBold" VerticalAlignment="Center" FontSize="15">
									<ContentPresenter x:Name="TabItemTemplateContent" VerticalAlignment="Center" ContentSource="Header" Margin="2,0,2,0"/>
								</TextBlock>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcSelectedColor#2}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcTabItemForeground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль TabItem с темносиним цветом и бордером справа (R)-->
		<Style x:Key="EmcTabItem#3R" TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="TabItemTemplateBorder">
							<Border x:Name="TextBorder" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource EmcColorBorder}" Height="{DynamicResource EmcTabItemHeightMid}" VerticalAlignment="Center" HorizontalAlignment="Center">
								<TextBlock x:Name="TabItemTextBlock" FontWeight="DemiBold" VerticalAlignment="Center" FontSize="15">
									<ContentPresenter x:Name="TabItemTemplateContent" VerticalAlignment="Center" ContentSource="Header" Margin="2,0,2,0"/>
								</TextBlock>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcSelectedColor#2}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcTabItemForeground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Стиль TabItem с темносиним цветом и бордером слева и справа (LR)-->
		<Style x:Key="EmcTabItem#3LR" TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="TabItemTemplateBorder">
							<Border x:Name="TextBorder" BorderThickness="1,0,1,0" BorderBrush="{DynamicResource EmcColorBorder}" Height="{DynamicResource EmcTabItemHeightMid}" VerticalAlignment="Center" HorizontalAlignment="Center">
								<TextBlock x:Name="TabItemTextBlock" FontWeight="DemiBold" VerticalAlignment="Center" FontSize="15">
									<ContentPresenter x:Name="TabItemTemplateContent" VerticalAlignment="Center" ContentSource="Header" Margin="2,0,2,0"/>
								</TextBlock>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcSelectedColor#2}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcTabItemForeground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="EmcTabItemNoBdr" TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="TabItemTemplateBorder">
							<Border x:Name="TextBorder" BorderThickness="0,0,0,0" BorderBrush="{DynamicResource EmcColorBorder}" Height="{DynamicResource EmcTabItemHeight}" VerticalAlignment="Center" HorizontalAlignment="Center">
								<TextBlock x:Name="TabItemTextBlock" FontWeight="DemiBold" VerticalAlignment="Center" FontSize="16" Padding="0,3,0,3" >
									<ContentPresenter x:Name="TabItemTemplateContent" VerticalAlignment="Center" ContentSource="Header" Margin="10,0,10,0"/>
								</TextBlock>
							</Border>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcSelectedColor}" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="TabItemTextBlock" Property="Foreground" Value="{DynamicResource EmcTabItemForeground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="EmcGroupBox"
			TargetType="GroupBox">
			<Setter Property="BorderBrush" Value="#D5DFE5" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="GroupBox">
						<Grid SnapsToDevicePixels="true">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="6" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="6" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="6" />
							</Grid.RowDefinitions>
							<Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
							<Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
								<ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
							<ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
								<Border.OpacityMask>
									<MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
										<Binding ElementName="Header" Path="ActualWidth" />
										<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
										<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
									</MultiBinding>
								</Border.OpacityMask>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<Style x:Key="EmcToolBarTriangle" TargetType="{x:Type Control}">
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Control}">
						<Polygon x:Name="SeparateTriangle" Points="0 8, 6 20, 0 32" Stroke="{DynamicResource EmcToolbarForeground}" Fill="{DynamicResource EmcToolbarForeground}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<Style x:Key="EmcToolBar" TargetType="ToolBar">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToolBar">
						<Border SnapsToDevicePixels="True" BorderThickness="0">
							<StackPanel Orientation="Horizontal" IsItemsHost="True" Background="{DynamicResource EmcToolbarBackground}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<Style x:Key="EmcPopUpWindow" TargetType="Window">
			<!--<Setter Property="Background" Value="{StaticResource EmcSemiTransparentBrush}"/>-->
			<Setter Property="WindowStyle" Value="None"/>
			<Setter Property="ShowInTaskbar" Value="False"/>
			<Setter Property="Topmost" Value="True"/>
			<Setter Property="FontSize" Value="{StaticResource EmcFontSizeMedium}"/>
			<Setter Property="AllowsTransparency" Value="True"/>
		</Style>


		<Viewbox x:Key="CheckIcon">
			<Canvas Width="442.792" Height="410.384">
				<Canvas.RenderTransform>
					<MatrixTransform Matrix="0.480185 0 0 0.475393 -316.231 467.486"/>
				</Canvas.RenderTransform>
				<Path Fill="{DynamicResource EmcButtonIconColor}" StrokeThickness="19.8918" Stroke="{DynamicResource EmcButtonIconColor}" StrokeMiterLimit="4" Data="m668.507996 -464.059998l287.721008 333.899002c146.600952 -298.831009 326.061035 -573.742996 614.510986 -834.747025c-215.880005 121.817993 -453.849976 353.142029 -657.135986 639.381012l-245.096008 -138.53299z"/>
			</Canvas>
		</Viewbox>


		<Style x:Key="EmcTabControlHack" TargetType="TextBox">
			<Setter Property="Width" Value="0"/>
			<Setter Property="Height" Value="0"/>
		</Style>


		<Style x:Key="EmcTextBlockBase" TargetType="TextBlock">
			<Setter Property="Foreground" Value="{DynamicResource EmcTextForeground}"/>
		</Style>


		<Style x:Key="EmcBackgroundText" TargetType="TextBlock">
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="FontStyle" Value="Oblique"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="FontSize" Value="50"/>
			<Setter Property="Foreground" Value="{DynamicResource EmcBackgroundTextColor}"/>
		</Style>


		<Style x:Key="EmcTransparentGrid" TargetType="Grid">
			<Setter Property="Background" Value="Transparent"/>
		</Style>

		<Style x:Key="LinkUpPlc" TargetType="{x:Type ContentControl}">
			<Setter Property="ContentTemplate">
				<Setter.Value>
					<DataTemplate>
						<Viewbox Margin="2">
							<Canvas Width="490.054" Height="490.054">
								<Canvas.RenderTransform>
									<TranslateTransform X="0" Y="0"/>
								</Canvas.RenderTransform>
								<Canvas.Resources/>
								<Canvas>
									<Canvas>
										<Path Fill="White">
											<Path.Data>
												<PathGeometry Figures="M469.577 101.961h-393.6l74.9-65.8c8.3-8.3 9.4-20.9 2.1-29.2c-7.3-8.3-20.8-9.4-29.1-2.1l-116.5 102.4    c-8.7 8.7-9.2 22 0 31.3l116.5 103.3c12.3 10.2 25 3.1 29.1-1c7.3-8.3 6.2-21.9-2.1-29.2l-77.3-67.8h394.9    c11.3 0 21.5-9.4 21.5-20.9C490.077 111.361 480.877 101.961 469.577 101.961z"/>
											</Path.Data>
										</Path>

										<Path Fill="White">
											<Path.Data>
												<PathGeometry Figures="M481.777 350.361l-116.5-103.3c-8.3-7.3-21.8-6.3-29.1 2.1c-7.3 8.3-6.2 21.9 2.1 29.2l76.1 66.8h-394    c-11.2 0-20.3 9.4-20.3 20.9s9.1 20.9 20.3 20.9h393.9l-76.1 66.8c-8.3 8.3-9.4 20.9-2.1 29.2c11.9 12.6 25 5.2 29.1 2.1    l116.5-103.3C491.677 371.761 491.577 360.261 481.777 350.361z"/>
											</Path.Data>
										</Path>
									</Canvas>
								</Canvas>
								<Canvas.LayoutTransform>
									<RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
								</Canvas.LayoutTransform>
							</Canvas>
						</Viewbox>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	
</Styles>
